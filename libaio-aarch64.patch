diff --git a/compat-libaio-0.3.109/harness/cases/16.t b/compat-libaio-0.3.109/harness/cases/16.t
index c3157cc..7a60324 100644
--- a/compat-libaio-0.3.109/harness/cases/16.t
+++ b/compat-libaio-0.3.109/harness/cases/16.t
@@ -3,25 +3,7 @@
 */
 #include <stdint.h>
 #include <err.h>
-#include <sys/syscall.h>   /* For SYS_xxx definitions */
-
-#ifndef SYS_eventfd
-#if defined(__i386__)
-#define SYS_eventfd 323
-#elif defined(__x86_64__)
-#define SYS_eventfd 284
-#elif defined(__ia64__)
-#define SYS_eventfd 1309
-#elif defined(__PPC__)
-#define SYS_eventfd 307
-#elif defined(__s390__)
-#define SYS_eventfd 318
-#elif defined(__alpha__)
-#define SYS_eventfd 478
-#else
-#error define SYS_eventfd for your arch!
-#endif
-#endif
+#include <sys/eventfd.h>
 
 int test_main(void)
 {
@@ -39,7 +21,7 @@ int test_main(void)
 	struct timespec	notime = { .tv_sec = 0, .tv_nsec = 0 };
 
 	buf = malloc(SIZE);				assert(buf);
-	efd = syscall(SYS_eventfd, 0);
+	efd = eventfd(0, 0);
 	if (efd < 0) {
 		if (errno == ENOSYS) {
 			printf("No eventfd support.  [SKIPPING]\n");
diff --git a/compat-libaio-0.3.109/src/libaio.h b/compat-libaio-0.3.109/src/libaio.h
index ffe8259..4f8c2f7 100644
--- a/compat-libaio-0.3.109/src/libaio.h
+++ b/compat-libaio-0.3.109/src/libaio.h
@@ -83,6 +83,16 @@ typedef enum io_iocb_cmd {
 #define PADDEDptr(x, y)	x; unsigned y
 #define PADDEDul(x, y)	unsigned long x; unsigned y
 #  endif
+#elif defined(__aarch64__)
+#  if defined (__AARCH64EB__) /* big endian, 64 bits */
+#define PADDED(x, y)    unsigned y; x
+#define PADDEDptr(x,y)  x
+#define PADDEDul(x, y)  unsigned long x
+#  elif defined(__AARCH64EL__) /* little endian, 64 bits */
+#define PADDED(x, y)    x, y
+#define PADDEDptr(x, y) x
+#define PADDEDul(x, y)  unsigned long x
+#  endif
 #else
 #error	endian?
 #endif
diff --git a/harness/cases/16.t b/harness/cases/16.t
index c3157cc..7a60324 100644
--- a/harness/cases/16.t
+++ b/harness/cases/16.t
@@ -3,25 +3,7 @@
 */
 #include <stdint.h>
 #include <err.h>
-#include <sys/syscall.h>   /* For SYS_xxx definitions */
-
-#ifndef SYS_eventfd
-#if defined(__i386__)
-#define SYS_eventfd 323
-#elif defined(__x86_64__)
-#define SYS_eventfd 284
-#elif defined(__ia64__)
-#define SYS_eventfd 1309
-#elif defined(__PPC__)
-#define SYS_eventfd 307
-#elif defined(__s390__)
-#define SYS_eventfd 318
-#elif defined(__alpha__)
-#define SYS_eventfd 478
-#else
-#error define SYS_eventfd for your arch!
-#endif
-#endif
+#include <sys/eventfd.h>
 
 int test_main(void)
 {
@@ -39,7 +21,7 @@ int test_main(void)
 	struct timespec	notime = { .tv_sec = 0, .tv_nsec = 0 };
 
 	buf = malloc(SIZE);				assert(buf);
-	efd = syscall(SYS_eventfd, 0);
+	efd = eventfd(0, 0);
 	if (efd < 0) {
 		if (errno == ENOSYS) {
 			printf("No eventfd support.  [SKIPPING]\n");
diff --git a/src/libaio.h b/src/libaio.h
index ffe8259..4f8c2f7 100644
--- a/src/libaio.h
+++ b/src/libaio.h
@@ -83,6 +83,16 @@ typedef enum io_iocb_cmd {
 #define PADDEDptr(x, y)	x; unsigned y
 #define PADDEDul(x, y)	unsigned long x; unsigned y
 #  endif
+#elif defined(__aarch64__)
+#  if defined (__AARCH64EB__) /* big endian, 64 bits */
+#define PADDED(x, y)    unsigned y; x
+#define PADDEDptr(x,y)  x
+#define PADDEDul(x, y)  unsigned long x
+#  elif defined(__AARCH64EL__) /* little endian, 64 bits */
+#define PADDED(x, y)    x, y
+#define PADDEDptr(x, y) x
+#define PADDEDul(x, y)  unsigned long x
+#  endif
 #else
 #error	endian?
 #endif
